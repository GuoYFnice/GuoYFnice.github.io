(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{507:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"flex（弹性布局）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex（弹性布局）"}},[t._v("#")]),t._v(" flex（弹性布局）")]),t._v(" "),s("p",[t._v("使用display:flex设置，对盒子的属性如下")]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"flex-direction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),s("p",[t._v("决定主轴的方向，")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex-wrap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),s("p",[t._v("决定是否换行")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),s("p",[t._v("为flex-direction"),s("code",[t._v("属性和")]),t._v("flex-wrap"),s("code",[t._v("属性的简写形式，默认值为")]),t._v("row nowrap")])]),t._v(" "),s("li",[s("h3",{attrs:{id:"justify-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),s("p",[t._v("定义了项目在主轴上的对齐方式。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h3",{attrs:{id:"align-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),s("p",[t._v("在交叉轴上如何对齐")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("baseline")]),t._v(": 项目的第一行文字的基线对齐。")]),t._v(" "),s("p",[s("code",[t._v("stretch")]),t._v("（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度")])]),t._v(" "),s("li",[s("h3",{attrs:{id:"align-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),s("p",[t._v("定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("对盒子内部项目的属性如下")]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" order")]),t._v(" "),s("p",[t._v("定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex-grow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),s("p",[t._v("定义项目的放大比例，默认为"),s("code",[t._v("0")]),t._v("，即如果存在剩余空间，也不放大")]),t._v(" "),s("p",[t._v("如果所有项目的"),s("code",[t._v("flex-grow")]),t._v("属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的"),s("code",[t._v("flex-grow")]),t._v("属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。")])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex-shrink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),s("p",[t._v("义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex-basis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),s("p",[t._v("定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为"),s("code",[t._v("auto")]),t._v("，即项目的本来大小。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n")])])]),s("p",[t._v("它可以设为跟"),s("code",[t._v("width")]),t._v("或"),s("code",[t._v("height")]),t._v("属性一样的值（比如350px），则项目将占据固定空间")])]),t._v(" "),s("li",[s("h3",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),s("p",[s("code",[t._v("flex")]),t._v("属性是"),s("code",[t._v("flex-grow")]),t._v(", "),s("code",[t._v("flex-shrink")]),t._v(" 和 "),s("code",[t._v("flex-basis")]),t._v("的简写，默认值为"),s("code",[t._v("0 1 auto")]),t._v("。后两个属性可选。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v("> ]\n")])])])]),t._v(" "),s("li",[s("h3",{attrs:{id:"align-self"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),s("p",[t._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖"),s("code",[t._v("align-items")]),t._v("属性。默认值为"),s("code",[t._v("auto")]),t._v("，表示继承父元素的"),s("code",[t._v("align-items")]),t._v("属性，如果没有父元素，则等同于"),s("code",[t._v("stretch")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"grid（网格布局）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid（网格布局）"}},[t._v("#")]),t._v(" grid（网格布局）")]),t._v(" "),s("p",[s("code",[t._v("display: grid")]),t._v("指定一个容器采用网格布局。")]),t._v(" "),s("p",[t._v("display: inline-grid是在行内的一个网络布局")]),t._v(" "),s("ul",[s("li",[s("h4",{attrs:{id:"盒子属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒子属性"}},[t._v("#")]),t._v(" 盒子属性")])])]),t._v(" "),s("h4",{attrs:{id:"grid-template-columns-属性，-grid-template-rows-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-template-columns-属性，-grid-template-rows-属性"}},[t._v("#")]),t._v(" grid-template-columns 属性， grid-template-rows 属性")]),t._v(" "),s("p",[t._v("容器指定了网格布局以后，接着就要划分行和列。"),s("code",[t._v("grid-template-columns")]),t._v("属性定义每一列的列宽，"),s("code",[t._v("grid-template-rows")]),t._v("属性定义每一行的行高。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 100px 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//也可以使用%\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 100px 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("repeat\ngrid-template-columns: repeat(3, 33.33%);\ngrid-template-rows: repeat(3, 33.33%);\n有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用repeat()函数，简化重复的值。上面的代码用repeat()改写如下。\n接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。")])]),t._v(" "),s("li",[s("p",[t._v("auto-fill\n元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用auto-fill关键字表示自动填充")])]),t._v(" "),s("li",[s("p",[t._v("fr")]),t._v(" "),s("p",[t._v("为了方便表示比例关系，网格布局提供了"),s("code",[t._v("fr")]),t._v('关键字（fraction 的缩写，意为"片段"）。如果两列的宽度分别为'),s("code",[t._v("1fr")]),t._v("和"),s("code",[t._v("2fr")]),t._v("，就表示后者是前者的两倍。")])]),t._v(" "),s("li",[s("p",[t._v("minmax()")]),t._v(" "),s("p",[s("code",[t._v("minmax()")]),t._v("函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。\ngrid-template-columns: 1fr 1fr minmax(100px, 1fr);\n上面代码中，"),s("code",[t._v("minmax(100px, 1fr)")]),t._v("表示列宽不小于"),s("code",[t._v("100px")]),t._v("，不大于"),s("code",[t._v("1fr")])])]),t._v(" "),s("li",[s("p",[t._v("auto")]),t._v(" "),s("p",[s("code",[t._v("auto")]),t._v("关键字表示由浏览器自己决定长度。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px auto 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了"),s("code",[t._v("min-width")]),t._v("，且这个值大于最大宽度。")])]),t._v(" "),s("li",[s("p",[t._v("网格线的名称")]),t._v(" "),s("p",[s("code",[t._v("grid-template-columns")]),t._v("属性和"),s("code",[t._v("grid-template-rows")]),t._v("属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" [c1] 100px [c2] 100px [c3] auto [c4]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" [r1] 100px [r2] 100px [r3] auto [r4]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面代码指定网格布局为3行 x 3列，因此有4根垂直网格线和4根水平网格线。方括号里面依次是这八根线的名字。")]),t._v(" "),s("p",[t._v("网格布局允许同一根线有多个名字，比如"),s("code",[t._v("[fifth-line row-5]")]),t._v("。")])])]),t._v(" "),s("h4",{attrs:{id:"grid-row-gap-属性，-grid-column-gap-属性，-grid-gap-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-row-gap-属性，-grid-column-gap-属性，-grid-gap-属性"}},[t._v("#")]),t._v(" grid-row-gap 属性， grid-column-gap 属性， grid-gap 属性")]),t._v(" "),s("p",[s("code",[t._v("grid-row-gap")]),t._v("属性设置行与行的间隔（行间距），"),s("code",[t._v("grid-column-gap")]),t._v("属性设置列与列的间隔（列间距）。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-row-gap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-column-gap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("grid-gap")]),t._v("属性是"),s("code",[t._v("grid-column-gap")]),t._v("和"),s("code",[t._v("grid-row-gap")]),t._v("的合并简写形式，语法如下。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("grid-gap: <grid-row-gap> <grid-column-gap>;\n")])])]),s("h4",{attrs:{id:"grid-template-areas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-template-areas"}},[t._v("#")]),t._v(" grid-template-areas")]),t._v(" "),s("p",[t._v('网格布局允许指定"区域"（area），一个区域由单个或多个单元格组成。'),s("code",[t._v("grid-template-areas")]),t._v("属性用于定义区域。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 100px 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px 100px 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-areas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a b c'")]),t._v("\n                       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d e f'")]),t._v("\n                       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g h i'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面代码先划分出9个单元格，然后将其定名为"),s("code",[t._v("a")]),t._v("到"),s("code",[t._v("i")]),t._v("的九个区域，分别对应这九个单元格。")]),t._v(" "),s("p",[t._v('如果某些区域不需要利用，则使用"点"（'),s("code",[t._v(".")]),t._v("）表示。")]),t._v(" "),s("p",[t._v("注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为"),s("code",[t._v("区域名-start")]),t._v("，终止网格线自动命名为"),s("code",[t._v("区域名-end")]),t._v("。")]),t._v(" "),s("p",[t._v("比如，区域名为"),s("code",[t._v("header")]),t._v("，则起始位置的水平网格线和垂直网格线叫做"),s("code",[t._v("header-start")]),t._v("，终止位置的水平网格线和垂直网格线叫做"),s("code",[t._v("header-end")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"grid-auto-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-auto-flow"}},[t._v("#")]),t._v(" grid-auto-flow")]),t._v(" "),s("p",[t._v('划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是"先行后列"，即先填满第一行，再开始放入第二行')]),t._v(" "),s("p",[t._v("默认值是"),s("code",[t._v("row")]),t._v('，即"先行后列"。也可以将它设成'),s("code",[t._v("column")]),t._v('，变成"先列后行"。')]),t._v(" "),s("p",[s("code",[t._v("grid-auto-flow")]),t._v("属性除了设置成"),s("code",[t._v("row")]),t._v("和"),s("code",[t._v("column")]),t._v("，还可以设成"),s("code",[t._v("row dense")]),t._v("和"),s("code",[t._v("column dense")]),t._v("。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置")]),t._v(" "),s("h4",{attrs:{id:"justify-items-属性，-align-items-属性，-place-items-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-items-属性，-align-items-属性，-place-items-属性"}},[t._v("#")]),t._v(" justify-items 属性， align-items 属性， place-items 属性")]),t._v(" "),s("p",[s("code",[t._v("justify-items")]),t._v("属性设置单元格内容的水平位置（左中右），"),s("code",[t._v("align-items")]),t._v("属性设置单元格内容的垂直位置（上中下）。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("place-items")]),t._v("属性是"),s("code",[t._v("align-items")]),t._v("属性和"),s("code",[t._v("justify-items")]),t._v("属性的合并简写形式。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("place-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <align-items> <justify-items>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"justify-content-属性，-align-content-属性，-place-content-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-content-属性，-align-content-属性，-place-content-属性"}},[t._v("#")]),t._v(" justify-content 属性， align-content 属性， place-content 属性")]),t._v(" "),s("p",[s("code",[t._v("justify-content")]),t._v("属性是整个内容区域在容器里面的水平位置（左中右），"),s("code",[t._v("align-content")]),t._v("属性是整个内容区域的垂直位置（上中下）。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch | space-around | space-between | space-evenly"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch | space-around | space-between | space-evenly"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("place-content")]),t._v("属性是"),s("code",[t._v("align-content")]),t._v("属性和"),s("code",[t._v("justify-content")]),t._v("属性的合并简写形式。")]),t._v(" "),s("h4",{attrs:{id:"grid-auto-columns-属性，-grid-auto-rows-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-auto-columns-属性，-grid-auto-rows-属性"}},[t._v("#")]),t._v(" grid-auto-columns 属性， grid-auto-rows 属性")]),t._v(" "),s("p",[s("code",[t._v("grid-auto-columns")]),t._v("属性和"),s("code",[t._v("grid-auto-rows")]),t._v("属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与"),s("code",[t._v("grid-template-columns")]),t._v("和"),s("code",[t._v("grid-template-rows")]),t._v("完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。")]),t._v(" "),s("h4",{attrs:{id:"grid-template-属性，-grid-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-template-属性，-grid-属性"}},[t._v("#")]),t._v(" grid-template 属性， grid 属性")]),t._v(" "),s("p",[s("code",[t._v("grid-template")]),t._v("属性是"),s("code",[t._v("grid-template-columns")]),t._v("、"),s("code",[t._v("grid-template-rows")]),t._v("和"),s("code",[t._v("grid-template-areas")]),t._v("这三个属性的合并简写形式。")]),t._v(" "),s("p",[s("code",[t._v("grid")]),t._v("属性是"),s("code",[t._v("grid-template-rows")]),t._v("、"),s("code",[t._v("grid-template-columns")]),t._v("、"),s("code",[t._v("grid-template-areas")]),t._v("、 "),s("code",[t._v("grid-auto-rows")]),t._v("、"),s("code",[t._v("grid-auto-columns")]),t._v("、"),s("code",[t._v("grid-auto-flow")]),t._v("这六个属性的合并简写形式。")]),t._v(" "),s("ul",[s("li",[s("h4",{attrs:{id:"项目属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目属性"}},[t._v("#")]),t._v(" 项目属性")])])]),t._v(" "),s("h4",{attrs:{id:"grid-column-start-属性，-grid-column-end-属性，-grid-row-start-属性，-grid-row-end-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-column-start-属性，-grid-column-end-属性，-grid-row-start-属性，-grid-row-end-属性"}},[t._v("#")]),t._v(" grid-column-start 属性， grid-column-end 属性， grid-row-start 属性， grid-row-end 属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("grid-column-start")]),t._v("属性：左边框所在的垂直网格线")]),t._v(" "),s("li",[s("code",[t._v("grid-column-end")]),t._v("属性：右边框所在的垂直网格线")]),t._v(" "),s("li",[s("code",[t._v("grid-row-start")]),t._v("属性：上边框所在的水平网格线")]),t._v(" "),s("li",[s("code",[t._v("grid-row-end")]),t._v("属性：下边框所在的水平网格线")])]),t._v(" "),s("p",[t._v("这四个属性的值还可以使用"),s("code",[t._v("span")]),t._v('关键字，表示"跨越"，即左右边框（上下边框）之间跨越多少个网格。')]),t._v(" "),s("h4",{attrs:{id:"grid-column-属性，-grid-row-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-column-属性，-grid-row-属性"}},[t._v("#")]),t._v(" grid-column 属性， grid-row 属性")]),t._v(" "),s("p",[s("code",[t._v("grid-column")]),t._v("属性是"),s("code",[t._v("grid-column-start")]),t._v("和"),s("code",[t._v("grid-column-end")]),t._v("的合并简写形式，"),s("code",[t._v("grid-row")]),t._v("属性是"),s("code",[t._v("grid-row-start")]),t._v("属性和"),s("code",[t._v("grid-row-end")]),t._v("的合并简写形式。")]),t._v(" "),s("h4",{attrs:{id:"grid-area"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-area"}},[t._v("#")]),t._v(" grid-area")]),t._v(" "),s("p",[s("code",[t._v("grid-area")]),t._v("属性指定项目放在哪一个区域")]),t._v(" "),s("p",[s("code",[t._v("grid-area")]),t._v("属性还可用作"),s("code",[t._v("grid-row-start")]),t._v("、"),s("code",[t._v("grid-column-start")]),t._v("、"),s("code",[t._v("grid-row-end")]),t._v("、"),s("code",[t._v("grid-column-end")]),t._v("的合并简写形式，直接指定项目的位置。")]),t._v(" "),s("h4",{attrs:{id:"justify-self-属性，-align-self-属性，-place-self-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-self-属性，-align-self-属性，-place-self-属性"}},[t._v("#")]),t._v(" justify-self 属性， align-self 属性， place-self 属性")]),t._v(" "),s("p",[s("code",[t._v("justify-self")]),t._v("属性设置单元格内容的水平位置（左中右），跟"),s("code",[t._v("justify-items")]),t._v("属性的用法完全一致，但只作用于单个项目。")]),t._v(" "),s("p",[s("code",[t._v("align-self")]),t._v("属性设置单元格内容的垂直位置（上中下），跟"),s("code",[t._v("align-items")]),t._v("属性的用法完全一致，也是只作用于单个项目。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" start | end | center | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);