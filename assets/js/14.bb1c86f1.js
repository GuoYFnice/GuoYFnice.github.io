(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{509:function(e,n,t){"use strict";t.r(n);var a=t(4),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"react组件实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react组件实例"}},[e._v("#")]),e._v(" react组件实例")]),e._v(" "),t("h3",{attrs:{id:"datalist（列表）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#datalist（列表）"}},[e._v("#")]),e._v(" DataList（列表）")]),e._v(" "),t("p",[e._v("使用传参控制列表是否为有序")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function DataList({ isOrdered , data }){\n\tconst list = data.map((val,i) => <li key={`${i}_${val}`>{val}</li>);\n    return isOrdered ? <ol>{list}</ol> : <ul>{list}</ul>\n}\n")])])]),t("h3",{attrs:{id:"datatable（表格）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#datatable（表格）"}},[e._v("#")]),e._v(" DataTable（表格）")]),e._v(" "),t("p",[e._v("通过map对数据进行表格展示")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function DataTable({ data }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((val, i) => (\n          <tr key={`${i}_${val}`}>\n            <td>{i}</td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n")])])]),t("h3",{attrs:{id:"mappedtable（带键值的表格）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mappedtable（带键值的表格）"}},[e._v("#")]),e._v(" MappedTable（带键值的表格）")]),e._v(" "),t("p",[e._v("寻找具有指定键值的table")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function MappedTable({ data, propertyNames }) {\n  let filteredData = data.map(v =>\n    Object.keys(v)\n      .filter(k => propertyNames.includes(k))\n      .reduce((acc, key) => ((acc[key] = v[key]), acc), {})\n  );\n  return (\n    <table>\n      <thead>\n        <tr>\n          {propertyNames.map(val => (\n            <th key={`h_${val}`}>{val}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {filteredData.map((val, i) => (\n          <tr key={`i_${i}`}>\n            {propertyNames.map(p => (\n              <td key={`i_${i}_${p}`}>{val[p]}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n")])])]),t("h3",{attrs:{id:"click（点击事件）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#click（点击事件）"}},[e._v("#")]),e._v(" click（点击事件）")]),e._v(" "),t("p",[e._v("用于处理在包装好的组件外部单击的事件")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const useClickOutside = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n")])])]),t("p",[e._v("用于处理在包装好的组件内部单击的事件。")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const useClickInside = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n  React.useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n")])])]),t("h3",{attrs:{id:"usefatch（网络请求）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usefatch（网络请求）"}},[e._v("#")]),e._v(" useFatch（网络请求）")]),e._v(" "),t("p",[e._v("处理网络请求")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const useFetch = (url, options) => {\n  const [response, setResponse] = React.useState(null);\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return { response, error };\n};\n")])])]),t("h3",{attrs:{id:"usetimeout（定时器）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usetimeout（定时器）"}},[e._v("#")]),e._v(" useTimeout（定时器）")]),e._v(" "),t("p",[e._v("以声明方式实现setTimeout")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const useTimeout = (callback, delay) => {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n};\n")])])]),t("h3",{attrs:{id:"input（输入框）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input（输入框）"}},[e._v("#")]),e._v(" input（输入框）")]),e._v(" "),t("p",[e._v("普通输入框")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function ControlledInput({\n  callback,\n  type = 'text',\n  disabled = false,\n  readOnly = false,\n  defaultValue,\n  placeholder = ''\n}) {\n  const [value, setValue] = React.useState(defaultValue);\n\n  React.useEffect(() => {\n    callback(value);\n  }, [value]);\n\n  return (\n    <input\n      defaultValue={defaultValue}\n      type={type}\n      disabled={disabled}\n      readOnly={readOnly}\n      placeholder={placeholder}\n      onChange={({ target: { value } }) => setValue(value)}\n    />\n  );\n}\n")])])]),t("h3",{attrs:{id:"limitedtextarea（受控多行输入）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limitedtextarea（受控多行输入）"}},[e._v("#")]),e._v(" LimitedTextarea（受控多行输入）")]),e._v(" "),t("p",[e._v("多行输入")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function LimitedTextarea({ rows, cols, value, limit }) {\n  const [content, setContent] = React.useState(value);\n\n  const setFormattedContent = text => {\n    text.length > limit ? setContent(text.slice(0, limit)) : setContent(text);\n  };\n\n  React.useEffect(() => {\n    setFormattedContent(content);\n  }, []);\n\n  return (\n    <div>\n      <textarea\n        rows={rows}\n        cols={cols}\n        onChange={event => setFormattedContent(event.target.value)}\n        value={content}\n      />\n      <p>\n        {content.length}/{limit}\n      </p>\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"multiselectcheckbox（多选框）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multiselectcheckbox（多选框）"}},[e._v("#")]),e._v(" MultiselectCheckbox（多选框）")]),e._v(" "),t("p",[e._v("多选框")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const style = {\n  listContainer: {\n    listStyle: 'none',\n    paddingLeft: 0\n  },\n  itemStyle: {\n    cursor: 'pointer',\n    padding: 5\n  }\n};\n\nfunction MultiselectCheckbox({ options, onChange }) {\n  const [data, setData] = React.useState(options);\n\n  const toggle = item => {\n    data.forEach((_, key) => {\n      if (data[key].label === item.label) data[key].checked = !item.checked;\n    });\n    setData([...data]);\n    onChange(data);\n  };\n\n  return (\n    <ul style={style.listContainer}>\n      {data.map(item => {\n        return (\n          <li key={item.label} style={style.itemStyle} onClick={() => toggle(item)}>\n            <input readOnly type=\"checkbox\" checked={item.checked || false} />\n            {item.label}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n")])])]),t("h3",{attrs:{id:"select（选择框）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select（选择框）"}},[e._v("#")]),e._v(" Select（选择框）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function Select({ values, callback, disabled = false, readonly = false, selected }) {\n  return (\n    <select\n      disabled={disabled}\n      readOnly={readonly}\n      onChange={({ target: { value } }) => callback(value)}\n    >\n      {values.map(([value, text]) => (\n        <option selected={selected === value} value={value}>\n          {text}\n        </option>\n      ))}\n    </select>\n  );\n}\n")])])]),t("h3",{attrs:{id:"accordion（手风琴菜单）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#accordion（手风琴菜单）"}},[e._v("#")]),e._v(" Accordion（手风琴菜单）")]),e._v(" "),t("p",[e._v("手风琴菜单")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function AccordionItem(props) {\n  const style = {\n    collapsed: {\n      display: 'none'\n    },\n    expanded: {\n      display: 'block'\n    },\n    buttonStyle: {\n      display: 'block',\n      width: '100%'\n    }\n  };\n\n  return (\n    <div>\n      <button style={style.buttonStyle} onClick={() => props.handleClick()}>\n        {props.label}\n      </button>\n      <div\n        className=\"collapse-content\"\n        style={props.isCollapsed ? style.collapsed : style.expanded}\n        aria-expanded={props.isCollapsed}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nfunction Accordion(props) {\n  const [bindIndex, setBindIndex] = React.useState(props.defaultIndex);\n\n  const changeItem = itemIndex => {\n    if (typeof props.onItemClick === 'function') props.onItemClick(itemIndex);\n    if (itemIndex !== bindIndex) setBindIndex(itemIndex);\n  };\n  const items = props.children.filter(item => item.type.name === 'AccordionItem');\n\n  return (\n    <div className=\"wrapper\">\n      {items.map(({ props }) => (\n        <AccordionItem\n          isCollapsed={bindIndex !== props.index}\n          label={props.label}\n          handleClick={() => changeItem(props.index)}\n          children={props.children}\n        />\n      ))}\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"alert（弹出提示）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alert（弹出提示）"}},[e._v("#")]),e._v(" alert（弹出提示）")]),e._v(" "),t("p",[e._v("对一些消息提醒进行封装")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@keyframes leave {\n  0% { opacity: 1 }\n  100% { opacity: 0 }\n}\n\n.alert {\n  padding: 0.75rem 0.5rem;\n  margin-bottom: 0.5rem;\n  text-align: left;\n  padding-right: 40px;\n  border-radius: 4px;\n  font-size: 16px;\n  position: relative;\n}\n\n.alert.warning{\n  color: #856404;\n  background-color: #fff3cd;\n  border-color: #ffeeba;\n}\n\n.alert.error{\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n}\n\n.alert.leaving{\n  animation: leave 0.5s forwards;\n}\n\n.alert .close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0 0.75rem;\n  color: #333;\n  border: 0;\n  height: 100%;\n  cursor: pointer;\n  background: none;\n  font-weight: 600;\n  font-size: 16px;\n}\n\n.alert .close:after{\n  content: 'x';\n}\nfunction Notification(props) {\n    const [isShown, setIsShown] = React.useState(false);\n    const [isLeaving, setIsLeaving] = React.useState(false);\n\n    let timeoutId = null;\n\n    React.useEffect(() => {\n      setIsShown(true);\n      return () => {\n        clearTimeout(timeoutId);\n      }\n    }, [props.isShown, props.timeout, timeoutId]);\n\n    const closeNotification = () => {\n      setIsLeaving(true);\n      timeoutId = setTimeout(() => {\n        setIsLeaving(false);\n        setIsShown(false);\n      }, 250)\n    }\n\n    return isShown && (\n      <div className={`alert ${props.type}${isLeaving ? ' leaving' : ''}`} role=\"alert\">\n        <button className=\"close\" onClick={closeNotification} />\n        {props.message}\n      </div>\n    )\n}\n")])])]),t("h3",{attrs:{id:"carousel（轮播图）un"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#carousel（轮播图）un"}},[e._v("#")]),e._v(" Carousel（轮播图）un")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function Carousel(props) {\n  const [active, setActive] = React.useState(0);\n  let scrollInterval = null;\n  const style = {\n    carousel: {\n      position: 'relative'\n    },\n    carouselItem: {\n      position: 'absolute',\n      visibility: 'hidden'\n    },\n    visible: {\n      visibility: 'visible'\n    }\n  };\n  React.useEffect(() => {\n    scrollInterval = setTimeout(() => {\n      const { carouselItems } = props;\n      setActive((active + 1) % carouselItems.length);\n    }, 2000);\n    return () => clearTimeout(scrollInterval);\n  });\n  const { carouselItems, ...rest } = props;\n  return (\n    <div style={style.carousel}>\n      {carouselItems.map((item, index) => {\n        const activeStyle = active === index ? style.visible : {};\n        return React.cloneElement(item, {\n          ...rest,\n          style: {\n            ...style.carouselItem,\n            ...activeStyle\n          }\n        });\n      })}\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"collapse（可折叠盒子）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collapse（可折叠盒子）"}},[e._v("#")]),e._v(" Collapse（可折叠盒子）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function Collapse(props) {\n  const [isCollapsed, setIsCollapsed] = React.useState(props.collapsed);\n\n  const style = {\n    collapsed: {\n      display: 'none'\n    },\n    expanded: {\n      display: 'block'\n    },\n    buttonStyle: {\n      display: 'block',\n      width: '100%'\n    }\n  };\n\n  return (\n    <div>\n      <button style={style.buttonStyle} onClick={() => setIsCollapsed(!isCollapsed)}>\n        {isCollapsed ? 'Show' : 'Hide'} content\n      </button>\n      <div\n        className=\"collapse-content\"\n        style={isCollapsed ? style.collapsed : style.expanded}\n        aria-expanded={isCollapsed}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"countdown（倒计时）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#countdown（倒计时）"}},[e._v("#")]),e._v(" CountDown（倒计时）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function CountDown({ hours = 0, minutes = 0, seconds = 0 }) {\n  const [paused, setPaused] = React.useState(false);\n  const [over, setOver] = React.useState(false);\n  const [time, setTime] = React.useState({\n    hours: parseInt(hours),\n    minutes: parseInt(minutes),\n    seconds: parseInt(seconds)\n  });\n\n  const tick = () => {\n    if (paused || over) return;\n    if (time.hours == 0 && time.minutes == 0 && time.seconds == 0) setOver(true);\n    else if (time.minutes == 0 && time.seconds == 0)\n      setTime({\n        hours: time.hours - 1,\n        minutes: 59,\n        seconds: 59\n      });\n    else if (time.seconds == 0)\n      setTime({\n        hours: time.hours,\n        minutes: time.minutes - 1,\n        seconds: 59\n      });\n    else\n      setTime({\n        hours: time.hours,\n        minutes: time.minutes,\n        seconds: time.seconds - 1\n      });\n  };\n\n  const reset = () => {\n    setTime({\n      hours: parseInt(hours),\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds)\n    });\n    setPaused(false);\n    setOver(false);\n  };\n\n  React.useEffect(() => {\n    let timerID = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerID);\n  });\n\n  return (\n    <div>\n      <p>{`${time.hours.toString().padStart(2, '0')}:${time.minutes\n        .toString()\n        .padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`}</p>\n      <div>{over ? \"Time's up!\" : ''}</div>\n      <button onClick={() => setPaused(!paused)}>{paused ? 'Resume' : 'Pause'}</button>\n      <button onClick={() => reset()}>Restart</button>\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"filedrop（文件拖拽）un"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filedrop（文件拖拽）un"}},[e._v("#")]),e._v(" FileDrop（文件拖拽）un")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".filedrop {\n  min-height: 120px;\n  border: 3px solid #d3d3d3;\n  text-align: center;\n  font-size: 24px;\n  padding: 32px;\n  border-radius: 4px;\n}\n\n.filedrop.drag {\n  border: 3px dashed #1e90ff;\n}\n\n.filedrop.ready {\n  border: 3px solid #32cd32;\n}\nfunction FileDrop(props) {\n  const [drag, setDrag] = React.useState(false);\n  const [filename, setFilename] = React.useState('');\n  let dropRef = React.createRef();\n  let dragCounter = 0;\n\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter++;\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) setDrag(true);\n  };\n\n  const handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter--;\n    if (dragCounter === 0) setDrag(false);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDrag(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      props.handleDrop(e.dataTransfer.files[0]);\n      setFilename(e.dataTransfer.files[0].name);\n      e.dataTransfer.clearData();\n      dragCounter = 0;\n    }\n  };\n\n  React.useEffect(() => {\n    let div = dropRef.current;\n    div.addEventListener('dragenter', handleDragIn);\n    div.addEventListener('dragleave', handleDragOut);\n    div.addEventListener('dragover', handleDrag);\n    div.addEventListener('drop', handleDrop);\n    return function cleanup() {\n      div.removeEventListener('dragenter', handleDragIn);\n      div.removeEventListener('dragleave', handleDragOut);\n      div.removeEventListener('dragover', handleDrag);\n      div.removeEventListener('drop', handleDrop);\n    };\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className={drag ? 'filedrop drag' : filename ? 'filedrop ready' : 'filedrop'}\n    >\n      {filename && !drag ? <div>{filename}</div> : <div>Drop files here!</div>}\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"modal（模态框）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modal（模态框）"}},[e._v("#")]),e._v(" Modal（模态框）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('.modal {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 9999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.25);\n  animation-name: appear;\n  animation-duration: 300ms;\n}\n\n.modal-dialog {\n  width: 100%;\n  max-width: 550px;\n  background: white;\n  position: relative;\n  margin: 0 20px;\n  max-height: calc(100vh - 40px);\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  -webkit-animation-name: animatetop;\n  -webkit-animation-duration: 0.4s;\n  animation-name: slide-in;\n  animation-duration: 0.5s;\n}\n\n.modal-header,\n.modal-footer {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n}\n.modal-header {\n  border-bottom: 1px solid #dbdbdb;\n  justify-content: space-between;\n}\n.modal-footer {\n  border-top: 1px solid #dbdbdb;\n  justify-content: flex-end;\n}\n.modal-close {\n  cursor: pointer;\n  padding: 1rem;\n  margin: -1rem -1rem -1rem auto;\n}\n.modal-body {\n  overflow: auto;\n}\n.modal-content {\n  padding: 1rem;\n}\n\n@keyframes appear {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@keyframes slide-in {\n  from {\n    transform: translateY(-150px);\n  }\n  to {\n    transform: translateY(0);\n  }\n}\nfunction Modal({ isVisible = false, title, content, footer, onClose }) {\n  React.useEffect(() => {\n    document.addEventListener(\'keydown\', keydownHandler);\n    return () => document.removeEventListener(\'keydown\', keydownHandler);\n  });\n\n  function keydownHandler({ key }) {\n    switch (key) {\n      case \'Escape\':\n        onClose();\n        break;\n      default:\n    }\n  }\n\n  return !isVisible ? null : (\n    <div className="modal" onClick={onClose}>\n      <div className="modal-dialog" onClick={e => e.stopPropagation()}>\n        <div className="modal-header">\n          <h3 className="modal-title">{title}</h3>\n          <span className="modal-close" onClick={onClose}>\n            &times;\n          </span>\n        </div>\n        <div className="modal-body">\n          <div className="modal-content">{content}</div>\n        </div>\n        {footer && <div className="modal-footer">{footer}</div>}\n      </div>\n    </div>\n  );\n}\n')])])]),t("h3",{attrs:{id:"tabs（标签菜单）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tabs（标签菜单）"}},[e._v("#")]),e._v(" Tabs（标签菜单）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".tab-menu > button {\n  cursor: pointer;\n  padding: 8px 16px;\n  border: 0;\n  border-bottom: 2px solid transparent;\n  background: none;\n}\n.tab-menu > button.focus {\n  border-bottom: 2px solid #007bef;\n}\n.tab-menu > button:hover {\n  border-bottom: 2px solid #007bef;\n}\nfunction TabItem(props) {\n  return <div {...props} />;\n}\n\nfunction Tabs(props) {\n  const [bindIndex, setBindIndex] = React.useState(props.defaultIndex);\n  const changeTab = newIndex => {\n    if (typeof props.onTabClick === 'function') props.onTabClick(newIndex);\n    setBindIndex(newIndex);\n  };\n  const items = props.children.filter(item => item.type.name === 'TabItem');\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"tab-menu\">\n        {items.map(({ props: { index, label } }) => (\n          <button onClick={() => changeTab(index)} className={bindIndex === index ? 'focus' : ''}>\n            {label}\n          </button>\n        ))}\n      </div>\n      <div className=\"tab-view\">\n        {items.map(({ props }) => (\n          <div\n            {...props}\n            className=\"tab-view_item\"\n            key={props.index}\n            style={{ display: bindIndex === props.index ? 'block' : 'none' }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n")])])]),t("h3",{attrs:{id:"tooltip-消息提示框"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tooltip-消息提示框"}},[e._v("#")]),e._v(" Tooltip(消息提示框)")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('.tooltip {\n  position: relative;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  visibility: hidden;\n  padding: 5px;\n  border-radius: 5px;\n}\n.tooltip-arrow {\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  border-width: 5px;\n  border-style: solid;\n  border-color: rgba(0, 0, 0, 0.7) transparent transparent;\n}\nfunction Tooltip({ children, text, ...rest }) {\n  const [show, setShow] = React.useState(false);\n\n  return (\n    <div>\n      <div className="tooltip" style={show ? { visibility: \'visible\' } : {}}>\n        {text}\n        <span className="tooltip-arrow" />\n      </div>\n      <div {...rest} onMouseEnter={() => setShow(true)} onMouseLeave={() => setShow(false)}>\n        {children}\n      </div>\n    </div>\n  );\n}\n')])])]),t("h3",{attrs:{id:"treeview（树状图）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#treeview（树状图）"}},[e._v("#")]),e._v(" TreeView（树状图）")]),e._v(" "),t("div",{staticClass:"language-react extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".tree-element {\n  margin: 0;\n  position: relative;\n}\n\ndiv.tree-element:before {\n  content: '';\n  position: absolute;\n  top: 24px;\n  left: 1px;\n  height: calc(100% - 48px);\n  border-left: 1px solid gray;\n}\n\n.toggler {\n  position: absolute;\n  top: 10px;\n  left: 0px;\n  width: 0;\n  height: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid transparent;\n  border-left: 5px solid gray;\n  cursor: pointer;\n}\n\n.toggler.closed {\n  transform: rotate(90deg);\n}\n\n.collapsed {\n  display: none;\n}\nfunction TreeView({\n  data,\n  toggled = true,\n  name = null,\n  isLast = true,\n  isChildElement = false,\n  isParentToggled = true\n}) {\n  const [isToggled, setIsToggled] = React.useState(toggled);\n\n  return (\n    <div\n      style={{ marginLeft: isChildElement ? 16 : 4 + 'px' }}\n      className={isParentToggled ? 'tree-element' : 'tree-element collapsed'}\n    >\n      <span\n        className={isToggled ? 'toggler' : 'toggler closed'}\n        onClick={() => setIsToggled(!isToggled)}\n      />\n      {name ? <strong>&nbsp;&nbsp;{name}: </strong> : <span>&nbsp;&nbsp;</span>}\n      {Array.isArray(data) ? '[' : '{'}\n      {!isToggled && '...'}\n      {Object.keys(data).map((v, i, a) =>\n        typeof data[v] == 'object' ? (\n          <TreeView\n            data={data[v]}\n            isLast={i === a.length - 1}\n            name={Array.isArray(data) ? null : v}\n            isChildElement\n            isParentToggled={isParentToggled && isToggled}\n          />\n        ) : (\n          <p\n            style={{ marginLeft: 16 + 'px' }}\n            className={isToggled ? 'tree-element' : 'tree-element collapsed'}\n          >\n            {Array.isArray(data) ? '' : <strong>{v}: </strong>}\n            {data[v]}\n            {i === a.length - 1 ? '' : ','}\n          </p>\n        )\n      )}\n      {Array.isArray(data) ? ']' : '}'}\n      {!isLast ? ',' : ''}\n    </div>\n  );\n}\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);